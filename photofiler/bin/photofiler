#!/usr/bin/python3

import os
import xml.etree.ElementTree as ET
from datetime import datetime
from subprocess import PIPE, Popen

# Executes code in shell
def cmdline(command):
    process = Popen(
        args=command,
        stdout=PIPE,
        shell=True
    )
    return process.communicate()[0]

# Set config file locations
config_file = '/etc/photofiler/config.xml'

# Set log file locations
log_file = '/var/log/photofiler.log'

# Returns true if process is already running
def is_running():
    pidof = cmdline('pidof photofiler')
    # pidof = pidof.rstrip("\n") 
    # my @pids = split / /, $pidof;

    # for my $pid (@pids) {
    #     if ($pid != $$) {
    #         return 1;
    #     }
    # }
    return 0

# Returns current timestamp
def get_timestamp():
    now = datetime.now()
    return now.strftime("%m/%d/%Y, %H:%M:%S")

# Print stats to log file
FH = open(log_file, 'a')
FH.write("[" + get_timestamp() + "] Starting photofiler...\n")
FH.close()

if not is_running():

    # Create a new object
    tree = ET.parse(config_file)
    root = tree.getroot()

    # Read elements from XML data
    source_dir = ""
    for source_dir_node in root.findall('source_dir'):
        source_dir = '/mnt/HD/HD_a2/' + source_dir_node.text
        break

    target_dir = ""
    for target_dir_node in root.findall('target_dir'):
        target_dir = '/mnt/HD/HD_a2/' + target_dir_node.text
        break

    exif_pattern = ""
    for exif_pattern_node in root.findall('exif_pattern'):
        exif_pattern = exif_pattern_node.text
        break

    FH = open(log_file, 'a')
    FH.write("[{t}] Execute exiftool with parameters specified in {f}\n".format(t=get_timestamp(), f=config_file))
    FH.write("    Source directory: {s}\n".format(s=source_dir))
    FH.write("    Target directory: {t}\n".format(t=target_dir))
    FH.write("    Exif pattern:     {p}\n".format(p=exif_pattern))
    FH.close()

    # Prepare exiftool command
    cmd = "exiftool -overwrite_original -P -r -d {t}/{p} \"-filename<CreateDate\" {s}".format(s=source_dir, t=target_dir, p=exif_pattern)
    
    # Execute
    result = cmdline(cmd)

    FH = open(log_file, 'a')
    FH.write("[{t}] Execution of exiftool finished.\n".format(t=get_timestamp()))
    FH.write(result.decode('utf-8'))
    FH.close()

else:
    FH = open(log_file, 'a')
    FH.write("[" + get_timestamp() + "] Skip execution of exiftool. Process is already running!\n")
    FH.close()

# Crop log file
cmdline("cat {f} | tail -n 100 > {f}.tmp && mv {f}.tmp {f}".format(f=log_file))