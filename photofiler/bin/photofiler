#!/usr/bin/python3

import re, os, sys
from datetime import datetime

sys.path.append('/mnt/HD/HD_a2/Nas_Prog/photofiler/share/python')

from exif import Image
from exif import DATETIME_STR_FORMAT

def resolve_vars_count(pattern, count):
    match = re.search(r'%([-_\.]{0,1})c', pattern)

    if match:
        span = match.span()
        padding = match[1]
        rest = pattern[span[1]:]

        pattern = pattern[0:span[0]] + padding + str(count) + resolve_vars_count(rest, count)

    return pattern


def resolve_vars_no_count(pattern):
    return re.sub(r'%([-_\.]{0,1})c', '', pattern)


def resolve_vars_path(pattern, ddir, dfile, dext):
    match = re.search(r'%([lu]{0,1})([dfe])', pattern)

    replace_dict = { 
        'd': ddir, 
        'f': dfile,
        'e': dext
    }

    if match:
        span = match.span()
        replace = replace_dict[match[2]]
        if match[1] == 'l':
            replace = replace.lower()
        elif match[1] == 'u':
            replace = replace.upper()
        rest = pattern[span[1]:]

        pattern = pattern[0:span[0]] + replace + resolve_vars_path(rest, ddir, dfile, dext)

    return pattern

  
def resolve_vars(pattern, ddir, dfile, dext):
    pattern = resolve_vars_path(pattern, ddir, dfile, dext)
  
    f = resolve_vars_no_count(pattern)

    if f != pattern:
      count = 0
      while os.path.exists(f):
        count += 1
        f = resolve_vars_count(pattern, count)

    return f 

def resolve_path(source_path, target_pattern, datetime_original):
    dt = datetime.strptime(datetime_original, DATETIME_STR_FORMAT)
    pattern = dt.strftime(target_pattern)

    ddir = os.path.dirname(source_path)
    dfile, dext = os.path.splitext(os.path.basename(source_path))
    dext = dext[1:]

    return resolve_vars(pattern, ddir, dfile, dext)


def move(source_path, target_path, override=False):
  target_dir = os.path.dirname(target_path)
  if not os.path.isdir(target_dir):
    os.makedirs(target_dir)
  if override or not os.path.exists(target_path):
    os.rename(source_path, target_path)


def process_file(source_path, target_pattern, override=False):

  with open(source_path, 'rb') as image_file:
    img = Image(image_file)
    
    if not img.has_exif:
      return False
    
    target_path = resolve_path(source_path, target_pattern, img.datetime_original)
    move(source_path, target_path, override=override)

    return True


def process_dir(source_dir_path, target_pattern, override=False):
  for file_name in os.listdir(source_dir_path):
    file_path = os.path.join(source_dir_path, file_name)
    process_file(file_path, target_pattern, override=override)


# move photos to target path
process_dir(sys.argv[1], sys.argv[2])