#!/usr/bin/perl -w

use strict;
use warnings;
use Switch;

use XML::Mini;
use XML::Mini::Document;

# Set config file locations
my $schedule_config_file = '/etc/photofiler/schedule.xml';

# Check if first argument has been given
my $length = @ARGV;

if($length < 1) {
	print "No argument given!\n";
	exit 1;
}

# Removes any existing reference to photofiler from crontab
sub remove_from_crontab {
	system('sed -i "/photofiler/d" /var/spool/cron/crontabs/root');
	system('killall crond');
	system('crond');
}

# Adds a schedule for photofiler to crontab
sub add_to_crontab {
	my $hour = $_[0];
	system("echo \"0 $hour * * * photofiler\" >> /var/spool/cron/crontabs/root");
	system('killall crond');
	system('crond');
}

# Returns 1 if config is set active in config file, 0 otherwise
sub read_config {
		
	# Create a new object
	my $xml = XML::Mini::Document->new();

	# Init the doc from config file
	$xml->fromFile($schedule_config_file);

	# Read values
	my $active = 0;
	if($xml->getElementByPath('photofiler/active')) {
		$active = $xml->getElementByPath('photofiler/active')->text() ? "1" : "0";
	}

	my $hour = 0;
	if($xml->getElementByPath('photofiler/hour')) {
		$hour = $xml->getElementByPath('photofiler/hour')->text();
	}

	return ($active, $hour);
}

switch($ARGV[0]) {
	# Add cronjob if necessary 
	case 'start' {
		my ($active, $hour) = read_config();
		if($active) {
			add_to_crontab($hour);
		}
	}
	# Remove cronjob
	case 'stop' {
		remove_from_crontab();
	}
	# Remove cronjob and readd if necessary
	case 'restart' {
		remove_from_crontab();
		my ($active, $hour) = read_config();
		if($active) {
			add_to_crontab($hour);
		}
	}
	# Default action
	else {
		print "Action not recognized.\n";
	}
}
